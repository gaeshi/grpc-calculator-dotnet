syntax = "proto3";

package calculator;

service CalculatorService {
    // Adds two numbers
    rpc Sum (SumRequest) returns (SumResponse) {
    }

    // Decomposes number into primes
    rpc PrimeNumberDecomposition (PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {
    }

    // Computes average over all integers
    rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {
    }

    // Computes current maximum among all integers in the input stream
    rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {
    }
    
    // Error handling
    // This RPC will throw an exception if the sent number is negative.
    rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {
    }
}

message SumRequest {
    int32 first_number = 1;
    int32 second_number = 2;
}

message SumResponse {
    int32 result = 1;
}

message PrimeNumberDecompositionRequest {
    int32 number = 1;
}

message PrimeNumberDecompositionResponse {
    int32 prime_factor = 1;
}

message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    double average = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 number = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}
